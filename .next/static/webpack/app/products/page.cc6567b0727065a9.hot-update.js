"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/products/page",{

/***/ "(app-pages-browser)/./src/data/products.ts":
/*!******************************!*\
  !*** ./src/data/products.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanEmptyCategories: () => (/* binding */ cleanEmptyCategories),\n/* harmony export */   cleanedCategories: () => (/* binding */ cleanedCategories),\n/* harmony export */   productCategories: () => (/* binding */ productCategories)\n/* harmony export */ });\n// 1. Fix duplicate products\nconst deduplicateProducts = (products)=>{\n    // If input is not an array, return empty array\n    if (!Array.isArray(products)) {\n        console.warn('deduplicateProducts received non-array input:', products);\n        return [];\n    }\n    // Filter out any non-object items\n    const validProducts = products.filter((product)=>product && typeof product === 'object' && 'id' in product);\n    const uniqueIds = new Set();\n    return validProducts.filter((product)=>{\n        if (uniqueIds.has(product.id)) {\n            return false;\n        }\n        uniqueIds.add(product.id);\n        return true;\n    });\n};\n// 2. Standardize voltage formats\nconst standardizeVoltage = (voltage)=>{\n    return voltage.replace(/[vV]/, 'V').replace(/[-\\/]/, '/').trim();\n};\n// 3. Standardize power formats\nconst standardizePower = (power)=>{\n    return power.toLowerCase().replace(/\\s+/g, '').replace(/kw/, 'KW');\n};\n// 4. Fix price inconsistencies\nconst validatePrice = (product)=>{\n    if (product.price < 0) {\n        product.price = 0;\n    }\n    return product;\n};\n// 5. Normalize specs format\nconst normalizeSpecs = (specs)=>{\n    // Si specs est undefined ou null, retourner un objet vide\n    if (!specs || typeof specs !== 'object') {\n        return {};\n    }\n    const normalizedSpecs = {};\n    try {\n        for (const [key, value] of Object.entries(specs)){\n            if (!key) continue; // Skip if key is empty or undefined\n            const normalizedKey = key.toLowerCase().replace(/\\s+/g, '_').replace(/[^\\w]/g, '');\n            if (typeof value === 'string') {\n                normalizedSpecs[normalizedKey] = value.trim();\n            } else {\n                normalizedSpecs[normalizedKey] = value;\n            }\n        }\n    } catch (error) {\n        console.warn('Error normalizing specs:', error);\n        return {};\n    }\n    return normalizedSpecs;\n};\n// Example fixes for specific categories:\nconst standardizeMotors = (product)=>{\n    if (product.specs.power) {\n        product.specs.power = standardizePower(product.specs.power);\n    }\n    if (product.specs.voltage) {\n        product.specs.voltage = standardizeVoltage(product.specs.voltage);\n    }\n    // Add protection class if missing for motors\n    if (!product.specs.protection && product.name.toLowerCase().includes('moteur')) {\n        product.specs.protection = 'IP55';\n    }\n    return product;\n};\nconst standardizeDisjunctors = (product)=>{\n    // Ensure consistent naming pattern\n    if (product.name.toLowerCase().includes('disjoncteur')) {\n        product.name = product.name.replace(/disj\\w+/i, 'DISJONCTEUR').toUpperCase();\n    }\n    return product;\n};\n// Main standardization function\nconst standardizeProduct = (product)=>{\n    // Basic validation\n    if (!product.id || !product.name) {\n        throw new Error(\"Invalid product data: \".concat(JSON.stringify(product)));\n    }\n    // Normalize product data\n    return {\n        ...product,\n        name: product.name.trim(),\n        specs: normalizeSpecs(product.specs),\n        price: Math.max(0, product.price),\n        active: Boolean(product.active)\n    };\n};\nconst productCategories = {\n    // Automatisation et contrôle\n    automatisation_controle: {\n        detecteurs: {\n            proximite: [\n                {\n                    id: \"P10174\",\n                    name: \"CAPTEUR INDUCTIF DE PROXIMITE\",\n                    reference: \"XS630B1PAM12\",\n                    price: 50800,\n                    active: true\n                },\n                {\n                    id: \"P10048\",\n                    name: \"DETECTEUR DE COURANT\",\n                    reference: \"3UF7100-1AA00.0\",\n                    specs: {\n                        marque: \"SIEMENS\"\n                    },\n                    price: 0,\n                    active: true\n                }\n            ],\n            fin_de_course: [\n                {\n                    id: \"P10049\",\n                    name: \"FIN DE COURSE\",\n                    reference: \"3SE5110.0CT11\",\n                    specs: {\n                        marque: \"SIEMENS\"\n                    },\n                    price: 0,\n                    active: true\n                }\n            ]\n        },\n        commande: {\n            boutons_poussoirs: [\n                {\n                    id: \"P10056\",\n                    name: \"CONTACT -ZBE-101\",\n                    specs: {\n                        marque: \"SCHNEIDER\"\n                    },\n                    price: 0,\n                    active: true\n                },\n                {\n                    id: \"P10057\",\n                    name: \"CONTACT - ZBV-B3\",\n                    reference: \"ZBV-B3\",\n                    specs: {\n                        marque: \"SCHNEIDER\"\n                    },\n                    price: 0,\n                    active: true\n                }\n            ]\n        },\n        pneumatique: {\n            distributeurs: [\n                {\n                    id: \"P10060\",\n                    name: \"DISTRIBUTEUR\",\n                    reference: \"4M210L-02\",\n                    specs: {\n                        marque: \"VALVE\"\n                    },\n                    price: 0,\n                    active: true\n                },\n                {\n                    id: \"P10192\",\n                    name: \"DISTRIBUTEUR JOUCOMATIC\",\n                    specs: {\n                        reference: \"52100002\",\n                        tension: \"AC 24V\"\n                    },\n                    price: 264400,\n                    active: true\n                }\n            ]\n        }\n    },\n    // Éclairage industriel\n    eclairage: {\n        tubes: {\n            fluorescents: [\n                {\n                    id: \"P10244\",\n                    name: \"LAMPE TUBE TF DE 36/BI\",\n                    specs: {\n                        longueur: \"1.20m\"\n                    },\n                    price: 1500,\n                    active: true\n                },\n                {\n                    id: \"P10253\",\n                    name: \"LAMPE TUBE TF18\",\n                    specs: {\n                        longueur: \"0.60m\",\n                        tension: \"220V\"\n                    },\n                    price: 2500,\n                    active: true\n                }\n            ]\n        },\n        projecteurs: {\n            industriels: [\n                {\n                    id: \"P10225\",\n                    name: \"LAMPADAIRE A CLOCHE LED ATT65 A\",\n                    specs: {\n                        puissance: \"200W\",\n                        tension: \"85-410V\",\n                        efficacite: \"110LM/W\"\n                    },\n                    price: 0,\n                    active: true\n                }\n            ]\n        }\n    },\n    // Installation électrique\n    installation_electrique: {\n        connexion: {\n            boites_derivation: [\n                {\n                    id: \"P10034\",\n                    name: \"BOITE DE DERIVATION\",\n                    specs: {\n                        dimensions: \"10010070\",\n                        marque: \"ANDELI\"\n                    },\n                    price: 0,\n                    active: true\n                }\n            ],\n            prises: [\n                {\n                    id: \"P10171\",\n                    name: \"FICHE MALE 3P+T 32A LEGRAND\",\n                    specs: {\n                        marque: \"LEGRAND\",\n                        type: \"3P+T\",\n                        amperage: \"32A\"\n                    },\n                    price: 35000,\n                    active: true\n                }\n            ]\n        },\n        alimentation: {\n            redresseurs: [\n                {\n                    id: \"P10035\",\n                    name: \"REDRESSEUR\",\n                    specs: {\n                        reference: \"BG1,5\",\n                        marque: \"SEW\"\n                    },\n                    price: 0,\n                    active: true\n                }\n            ]\n        }\n    },\n    // Outillage et équipement\n    outillage: {\n        outils_coupe: {\n            forets: [\n                {\n                    id: \"P10215\",\n                    name: \"FORET MECANICIEN\",\n                    specs: {\n                        diametre: \"32\",\n                        longueur_utile: \"300\"\n                    },\n                    price: 25000,\n                    active: true\n                },\n                {\n                    id: \"P10216\",\n                    name: \"FORET MECANICIEN\",\n                    specs: {\n                        diametre: \"6\",\n                        type: \"MECHE A METAL\"\n                    },\n                    price: 4500,\n                    active: true\n                }\n            ]\n        },\n        ventilation: {\n            extracteurs: [\n                {\n                    id: \"P10223\",\n                    name: \"EXTRACTEUR D'AIR\",\n                    specs: {\n                        taille: \"10''\",\n                        tension: \"220V\"\n                    },\n                    price: 48000,\n                    active: true\n                }\n            ]\n        }\n    },\n    // Consommables et accessoires\n    consommables: {\n        fixation: {\n            colliers: [\n                {\n                    id: \"P10212\",\n                    name: \"COLLIER COLRING\",\n                    specs: {\n                        dimensions: \"2,4X95MM2\",\n                        reference: \"32030\",\n                        marque: \"LEGRAND\"\n                    },\n                    price: 7800,\n                    active: true\n                },\n                {\n                    id: \"P10213\",\n                    name: \"COLLIER COLRING\",\n                    specs: {\n                        dimensions: \"3,5X140MM2\",\n                        reference: \"32037\",\n                        marque: \"LEGRAND\"\n                    },\n                    price: 10500,\n                    active: true\n                }\n            ]\n        },\n        identification: {\n            reperes_cables: [\n                {\n                    id: \"P10199\",\n                    name: \"REPERE CABLE\",\n                    specs: {\n                        section: \"1,5 / 1,5\"\n                    },\n                    price: 15000,\n                    active: true\n                }\n            ],\n            bagues: [\n                {\n                    id: \"P10031\",\n                    name: \"BAGUES REPERES\",\n                    reference: \"912-35-A\",\n                    specs: {\n                        marque: \"HWECMANN\"\n                    },\n                    price: 0,\n                    active: true\n                }\n            ]\n        }\n    },\n    // Équipement spécialisé\n    equipement_specialise: {\n        impression: {\n            tetes: [\n                {\n                    id: \"P10220\",\n                    name: \"TETE D'IMPRESSION\",\n                    specs: {\n                        reference: \"KHL07N2015M3\",\n                        type: \"NZ 7DOTS\"\n                    },\n                    price: 2600000,\n                    active: true\n                }\n            ]\n        }\n    }\n};\n// Remove empty categories and subcategories\nconst cleanEmptyCategories = (categories)=>{\n    const cleanedCategories = {};\n    // Iterate through each category\n    Object.entries(categories).forEach((param)=>{\n        let [categoryName, category] = param;\n        const cleanedCategory = {};\n        // Iterate through subcategories\n        Object.entries(category).forEach((param)=>{\n            let [subcategoryName, subcategory] = param;\n            const cleanedSubcategory = {};\n            // Iterate through types\n            Object.entries(subcategory).forEach((param)=>{\n                let [typeName, products] = param;\n                // Only keep types that have active products\n                if (Array.isArray(products)) {\n                    const activeProducts = products.filter((p)=>p && p.active);\n                    if (activeProducts.length > 0) {\n                        cleanedSubcategory[typeName] = activeProducts;\n                    }\n                }\n            });\n            // Only keep subcategories that have types with products\n            if (Object.keys(cleanedSubcategory).length > 0) {\n                cleanedCategory[subcategoryName] = cleanedSubcategory;\n            }\n        });\n        // Only keep categories that have subcategories with products\n        if (Object.keys(cleanedCategory).length > 0) {\n            cleanedCategories[categoryName] = cleanedCategory;\n        }\n    });\n    return cleanedCategories;\n};\n// Apply fixes to categories\nconst fixedCategories = Object.entries(productCategories).reduce((acc, param)=>{\n    let [category, subcategories] = param;\n    acc[category] = Object.entries(subcategories).reduce((subAcc, param)=>{\n        let [subcategory, types] = param;\n        subAcc[subcategory] = Object.entries(types).reduce((typeAcc, param)=>{\n            let [type, products] = param;\n            // Apply specific fixes based on category\n            let fixedProducts = deduplicateProducts(products);\n            switch(category){\n                case 'motorisation':\n                    fixedProducts = fixedProducts.map(standardizeMotors);\n                    break;\n                case 'protection_electrique':\n                    fixedProducts = fixedProducts.map(standardizeDisjunctors);\n                    break;\n            }\n            // Apply general standardization\n            typeAcc[type] = fixedProducts.map(standardizeProduct);\n            return typeAcc;\n        }, {});\n        return subAcc;\n    }, {});\n    return acc;\n}, {});\n// Clean empty categories\nconst cleanedCategories = cleanEmptyCategories(fixedCategories);\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/data/products.ts\n"));

/***/ })

});